[tool.poetry]
name = "kubernetes-fastapi-test-task"
version = "0.1.0"
description = "Сервис хранилище JSON-объектов, предназначенный для работы в облачной среде Kubernetes"
authors = ["Maxim Barannikov <barannikov.mu@gmail.com>"]
readme = "README.md"
packages = [{include = "storage_service"}]


[virtualenvs]
in-project = true
path = ".venv"


[tool.poetry.scripts]
start = "storage_service.main:start"


[tool.poetry.dependencies]
python = "^3.11"
fastapi = "0.101.0"
uvicorn = "0.23.2"
environs = "^9.5.0"
structlog = "^23.1.0"
pydantic = "^2.1.1"
prometheus-fastapi-instrumentator = "^6.1.0"
fastapi-healthchecks = "^1.0.7"
aiocache = "^0.12.2"
aiofiles = "^23.2.1"
orjson = "^3.9.10"


[tool.poetry.group.dev.dependencies]
ruff = "*"
mypy = "*"
pre-commit = "*"
pytest = "^7.4.0"
pytest-asyncio = "^0.21.1"
httpx = "^0.24.1"
types-aiofiles = "^23.2.0.0"


[tool.ruff]
target-version = 'py311'
line-length = 120
select = [
    "E",       # pycodestyle error
    "W",       # pycodestyle warning
    "F",       # pyflakes
    "A",       # flakes8-builtins
    "B",       # flake8-bugbear
    "COM",     # flakes8-commas
    "C4",      # flake8-comprehensions
    "Q",       # flake8-quotes
    "SIM",     # flake8-simplify
    "PTH",     # flake8-use-pathlib
    "I",       # isort
    "N",       # pep8 naming
    "UP",      # pyupgrade  
    "S",       # bandit
    "TID",     # flake8-tidy-imports
    "ICN",     # flake8-import-conventions
    "ISC",     # flake8-implicit-str-concat
    "TCH",     # flake8-type-checking
    "INT",     # flake8-gettext
    "YTT",     # flake8-2020
    "FA",      # flake8-future-annotations
    "C90",     # mccabe
    "PIE",     # flake8-pie
    "RSE",     # flake8-raise
    "PGH",     # pygrep-hooks
    "D201", "D204", "D206", "D207", "D208", "D209", "D210", "D211", "D213", "D300", "D301", "D402", "D412", "D414",  # docstring
]
ignore = [
    "E501",          # disabled control on the length of the string
    "S104",          # possible binding to all interfaces
    "Q000", "Q003",  # request ruff format
]

[tool.ruff.format]
# Prefer single quotes over double quotes.
quote-style = "single"

[tool.ruff.mccabe]
max-complexity = 25

[tool.ruff.lint.flake8-import-conventions.aliases]
# Declare the default aliases.
typing = "t"

[tool.ruff.per-file-ignores]
"storage_service/tests/**/*.py" = [
    "S101", # asserts allowed in tests
]


[tool.mypy]
python_version = "3.11"
show_error_codes = true
ignore_missing_imports = true
plugins = ["pydantic.mypy"]
exclude = [
    "test",
    "conftest",
]

[tool.pydantic-mypy]
warn_untyped_fields = true


[tool.pytest.ini_options]
env_override_existing_values = "1"
env_files = ".env"
addopts = "-s -p no:warnings"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
